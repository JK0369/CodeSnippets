<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lSegmentedControl</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>static let segmentedControlHeight = 70.0

private let segmentedControl = UISegmentedControl(items: [Text.&lt;#matchedUser#&gt;Text, Text.&lt;#passedUser#&gt;Text]).then {
  $0.selectedSegmentIndex = 0
}
private let &lt;#matchedUser#&gt;ContainerView = UIView()
private let &lt;#passedUser#&gt;ContainerView = UIView()

self.segmentedControl.snp.makeConstraints {
  $0.left.top.right.equalTo(self.view.safeAreaLayoutGuide)
  $0.height.equalTo(Metric.segmentedControlHeight)
}
self.matchedUserContainerView.snp.makeConstraints {
  $0.top.equalTo(self.segmentedControl.snp.bottom)
  $0.left.right.equalToSuperview()
  $0.bottom.equalTo(self.tabBarSeparatorView)
}
self.passedUserContainerView.snp.makeConstraints {
  $0.top.equalTo(self.segmentedControl.snp.bottom)
  $0.left.right.equalToSuperview()
  $0.bottom.equalTo(self.tabBarSeparatorView)
}

self.segmentedControl.rx.selectedSegmentIndex
  .observe(on: MainScheduler.asyncInstance)
  .bind(with: self) { ss, index in
    ss.matchedUserContainerView.isHidden = index == 1
    ss.passedUserContainerView.isHidden = self.matchedUserContainerView.isHidden.toggled
  }
  .disposed(by: self.disposeBag)</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>00E3DD0A-2E08-423D-AEEA-956B3B1CE62F</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>lSegmentedControl</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
