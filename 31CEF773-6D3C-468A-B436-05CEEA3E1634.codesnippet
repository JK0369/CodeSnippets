<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lTextView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>private let textView = UITextView().then {
  $0.isEditable = true
  $0.textContainerInset = .zero
  $0.contentInset = .zero
  $0.scrollIndicatorInsets = .zero
  $0.isScrollEnabled = true
  $0.attributedPlaceholder = Text.&lt;#singleTownReportDetailPlaceholder#&gt;
    .styled(style: .body15)
    .colored(Color.novel.withAlpha(0.6))
  $0.font = &lt;#TextStyle.body15.styles.font#&gt;
  $0.textColor = Color.nero
  $0.returnKeyType = .done
}

extension ReportOpinionTextView: UITextViewDelegate {
  func textView(
    _ textView: UITextView,
    shouldChangeTextIn range: NSRange,
    replacementText text: String
  ) -&gt; Bool {
    guard text != "\n" else {
      self.editingDidEndOnExitSubejct.onNext(Void())
      return false
    }
    
    guard
      let oldText = textView.text,
      let newRange = Range(range, in: oldText)
    else { return true }
    let inputText = text.trimmingCharacters(in: .whitespacesAndNewlines)
    let newText = oldText.replacingCharacters(in: newRange, with: inputText)
      .trimmingCharacters(in: .whitespacesAndNewlines)
    return newText.count &lt;= Material.maxInputTextCount
  }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>31CEF773-6D3C-468A-B436-05CEEA3E1634</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>lTextView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
