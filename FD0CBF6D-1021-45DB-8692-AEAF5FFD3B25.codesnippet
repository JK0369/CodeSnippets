<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lTabBarReactor</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import ReactorKit
import RxCocoa
import RxSwift

final class TabBarReactor: Reactor {
  enum Action {
    case didSelect(TabIndex)
  }
  enum Mutation {
    case setSelectedTab(TabIndex)
  }
  struct State {
    let tabs: [TabIndex] = [.first, .second, .third]
    
    @Pulse var selectedTabIndex: TabIndex
  }
  
  let initialState: State
  let provider: ServiceProviderType

  init(provider: ServiceProviderType) {
    self.provider = provider
    self.initialState = State(selectedTabIndex: .first)
  }
  
  func transform(action: Observable&lt;Action&gt;) -&gt; Observable&lt;Action&gt; {
    .merge(
      action,
      self.provider.tabIndexRelay.map(Action.didSelect)
    )
  }
  
  func mutate(action: Action) -&gt; Observable&lt;Mutation&gt; {
    switch action {
    case let .didSelect(tabIndex):
      return .just(.setSelectedTab(tabIndex))
    }
  }
  
  func reduce(state: State, mutation: Mutation) -&gt; State {
    var state = state
    switch mutation {
    case let .setSelectedTab(index):
      state.selectedTabIndex = index
    }
    return state
  }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>FD0CBF6D-1021-45DB-8692-AEAF5FFD3B25</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>lTabBarReactor</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
