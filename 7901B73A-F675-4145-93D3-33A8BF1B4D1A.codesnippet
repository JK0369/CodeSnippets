<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lViewController+TabBar</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import ReactorKit
import SnapKit
import Then
import RxSwift
import RxCocoa
import Reusable

class &lt;#UpperCaseName#&gt;ViewController: BaseViewController, ReactorKit.View, TabPresentable {
  // MARK: Constants
  private enum Metric {
    static let tabBarSeparatorViewHeight = 1.0
  }
  private enum Color {
  }
  private enum Text {
  }
  static var tabIndex: TabIndex = .&lt;#lowerCaseName#&gt;
  
  // MARK: UI
  private let tabBarSeparatorView = UIView().then {
    $0.backgroundColor = Color.gray
    $0.isUserInteractionEnabled = false
    $0.alpha = 0.2
  }
  
  // MARK: Properties
  var disposeBag = DisposeBag()
  
  // MARK: Layout
  override func configures() {
    super.configures()
    
    self.view.addSubviews(
      self.tabBarSeparatorView
    )
    
    self.tabBarSeparatorView.snp.makeConstraints {
      $0.bottom.left.right.equalTo(self.view.safeAreaLayoutGuide)
      $0.height.equalTo(Metric.tabBarSeparatorViewHeight)
    }
  }
  
  // MARK: Binding
  func bind(reactor: &lt;#UpperCaseName#&gt;ViewReactor) {
    // Action    
    // State
  }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>7901B73A-F675-4145-93D3-33A8BF1B4D1A</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>lViewController+TabBar</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
