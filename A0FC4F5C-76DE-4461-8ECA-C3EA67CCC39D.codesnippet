<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import SnapKit
import RxSwift
import RxCocoa

final class &lt;#Name#&gt;View: BaseView {
    // MARK: Constants
    private enum Metric {
        
    }
    
    // MARK: UI
    &lt;#UI Property#&gt;
    
    // MARK: Properties
    
    
    // MARK: Initializers
    required init(mode: Mode) {
        self.mode = mode
        super.init()
    }
    
    @available(*, unavailable)
    required init() {
        fatalError("init() has not been implemented")
    }
    
    // MARK: Layout
    override func configures() {
        super.configures()
        
        addSubviews(
            &lt;#property#&gt;
        )
        
        &lt;#someView#&gt;.snp.makeConstraints {
            $0.&lt;#edges#&gt;
        }
    }
}

extension Reactive where Base: &lt;#Name#&gt;View {
    var &lt;#titleText#&gt;: Observable&lt;&lt;#String#&gt;&gt; {
        &lt;#titleLabel.text#&gt;
    }
    
    var &lt;#isCustomViewHidden#&gt;: Binder&lt;&lt;#Bool#&gt;&gt; {
        Binder(base) { base, &lt;#isHidden#&gt; in
            base.rx.isHidden.onNext(isHidden)
        }
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>A0FC4F5C-76DE-4461-8ECA-C3EA67CCC39D</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>lView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
