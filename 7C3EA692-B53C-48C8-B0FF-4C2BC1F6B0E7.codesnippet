<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lViewController</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import ReactorKit
import SnapKit
import Then
import RxSwift
import RxCocoa
import Reusable

final class &lt;#Name#&gt;ViewController: BaseViewController, ReactorKit.View {
  // MARK: Constants
  private enum Metric {
    
  }
  private enum Color {
    
  }
  private enum Text {
    
  }
  
  // MARK: UI
  &lt;#UI property#&gt;
  
  // MARK: Properties
  var disposeBag = DisposeBag()
  
  // MARK: Initializer
  required init(reactor: &lt;#Name#&gt;ViewReactor) {
    super.init()
    self.reactor = reactor
  }
  
  // MARK: Layout
  override func configures() {
    super.configures()
    
    self.view.addSubviews(
      self.&lt;#titleButton#&gt;
    )
    
    self.&lt;#property#&gt;.snp.makeConstraints {
      $0.&lt;#edges#&gt;
    }
  }
  func bind(reactor: &lt;#Name#&gt;ViewReactor) {
    // Action
    self.&lt;#button#&gt;.rx.tap
      .throttle(.milliseconds(300), scheduler: MainScheduler.instance)
      .map(Reactor.Action.&lt;#action#&gt;)
      .bind(to: reactor.action)
      .disposed(by: self.disposeBag)
    
    // State
    reactor.state.&lt;#State#&gt;
      .observe(on: MainScheduler.asyncInstance)
      .bind(with: self) { ss, &lt;#_#&gt; in
        
      }
      .disposed(by: self.disposeBag)
  }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>7C3EA692-B53C-48C8-B0FF-4C2BC1F6B0E7</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>lViewController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
